import{_ as p,m as a,q as r,I as e,d,s,v as m,J as g}from"./entry.b7af00be.js";const l=""+globalThis.__publicAssetsURL("images/rainbow-line.webp"),x=""+globalThis.__publicAssetsURL("images/credit/28_Bess.webp"),_=""+globalThis.__publicAssetsURL("images/credit/30_Krit.webp"),b=""+globalThis.__publicAssetsURL("images/credit/64_Japan.webp"),f=""+globalThis.__publicAssetsURL("images/credit/89_Tae.webp"),h={},u={class:"credit_container"},v=e('<h1 id="About" class="credit-header">About Us</h1><img alt="" class="rainbow-dash-s" src="'+l+'"><div class="flex flex-col mt-7"><div class="flex flex-row flex-wrap justify-center"><div id="Best" class="contact-card-box flex flex-row align-middle"><img alt="" class="profile-img" src="'+x+'"><div class="flex flex-col justify-center ml-5"><p class="abt-name credit-txt credit-name">Kanisorn Somsriagsornsang</p><p class="tabt-detail credit-txt">65070028</p></div></div><div id="Krit" class="contact-card-box flex flex-row align-middle"><img alt="" class="profile-img" src="'+_+'"><div class="flex flex-col justify-center ml-5"><p class="abt-name credit-txt credit-name">Jarukrit Sripaploen</p><p class="tabt-detail credit-txt">65070030</p></div></div></div><div class="flex flex-wrap flex-row justify-center mt-4"><div id="Best" class="contact-card-box flex flex-row align-middle"><img alt="" class="profile-img" src="'+b+'"><div class="flex flex-col justify-center ml-5"><p class="abt-name credit-txt credit-name">Napat Wetchapun</p><p class="tabt-detail credit-txt">65070064</p></div></div><div id="Krit" class="contact-card-box flex flex-row align-middle"><img alt="" class="profile-img" src="'+f+'"><div class="flex flex-col justify-center ml-5"><p class="abt-name credit-txt credit-name">Tanakrit Supprasit</p><p class="tabt-detail credit-txt">65070089</p></div></div></div></div>',3),w=[v];function y(c,o,n,i,K,V){return a(),r("div",u,w)}const L=p(h,[["render",y]]),U=""+new URL("japan_arduino.d2d8cba4.webp",import.meta.url).href,R=""+new URL("Light_Sensor.74e7dc5b.png",import.meta.url).href,t=""+new URL("rainbow.08d078b7.svg",import.meta.url).href,T=""+new URL("NodeMCU_ESP8266-1.0967671a.png",import.meta.url).href,P=""+new URL("NodeMCU_ESP8266-2.1ce423a8.png",import.meta.url).href,C=""+new URL("GY-BMP280.54ed8964.png",import.meta.url).href,S=""+new URL("BMP-680.1b357176.png",import.meta.url).href,A=""+new URL("LCD_module.04a8cc1f.png",import.meta.url).href,M=""+new URL("table_forecast.2aea9627.png",import.meta.url).href,N=""+new URL("formula.7f9cf725.png",import.meta.url).href,B=""+new URL("best.6b3dbbad.webp",import.meta.url).href,E=""+new URL("japan.ea60dc34.webp",import.meta.url).href,k=""+new URL("krit.17d6affe.webp",import.meta.url).href,$=""+new URL("tae.4f2a638c.webp",import.meta.url).href;const j=s("div",{class:"Sooksan_Header"},[s("div",{class:"sook_north"},[s("div",{class:"sook_text"},"King Mongkut's Institute of Technology Ladkrabang")]),s("div",{class:"sook_south"})],-1),I={class:"main-body"},Z=e('<div class="ma-10 text-center" style="margin-bottom:50px;margin-top:20px;"><h1 class="text-5xl mb-4 font-bold pt-2">The Forecaster</h1><img alt="" class="rainbow-dash" src="'+l+'" style="margin-top:-10px;"><p class="mt-3" style="font-size:16px;">Predicting weather from surrounding readings from sensors</p></div><div class="grid grid-cols-2 text-center"><img alt="" class="img" src="'+U+'" width="500"><p>asd;asp[d</p></div><br><div class="grid grid-cols-2 text-center"></div><div id="sensors" class="sensor-box"><div class="grid grid-cols-3 text-center" style="align-content:center;"><div class="invisible" style="margin:auto;"><span class="text-2xl">LDR Light Sensor</span><p class="text-sm">Photoresistor as a light detector</p><img alt="" class="img" src="'+R+'" width="100%"></div><div style="margin:auto;"><div><span class="text-2xl">NodeMCU ESP8266</span><img alt="" class="rainbow" src="'+t+'" style="margin-top:-5px;" width="154px"><p class="text-sm">NodeMCU V3 LUA based ESP8266-12E for wifi connection with a leg extender board</p></div><div class="columns-2"><img class="img" src="'+T+'" width="100%"><img class="img" src="'+P+'" width="70%"></div></div><div class="invisible" style="margin:auto;"><span class="text-2xl">BME680</span><p class="text-sm">High-accuracy gas, pressure, humidity, and temperature sensor</p><img class="img" src="'+C+'" width="96%"></div></div><div class="grid grid-cols-2 text-center" style="align-content:center;"><div style="margin:auto;"><span class="text-2xl">BME680</span><img class="rainbow" src="'+t+'" style="margin-top:-5px;" width="154px"><p class="text-sm">High-accuracy gas, pressure, humidity, and temperature sensor</p><img class="img" src="'+S+'"></div><div style="margin:auto;"><span class="text-2xl">LCD module</span><img class="rainbow" src="'+t+'" width="154px"><p class="text-sm">Liquid crystal display as another output </p><img class="img" src="'+A+'" width="70%"></div></div></div><div class="px-3"><p class="text-3xl" style="margin-bottom:10px;">ABSTRACT<img alt="" src="'+t+'" width="80px"></p><p style="margin-left:30px;"> โปรเจ็กนี้เป็นการสร้างโปรแกรมสำหรับ Microcontroller เพื่ออ่านค่าต่างๆในสภาพแวดล้อมและนำไปใช้พยากรณ์อากาศในพื้นที่ท้องถิ่นด้วย Zembretti Algorithm โดยจะแสดงค่าที่วัดได้บน Web server ที่สร้างขึ้นมาและบนตัวหน้าจอ LCD บนเครื่อง, Microcontroller คือ NodeMCU ESP8266, ค่าที่ทำการวัดคือ สภาพแวดล้อม ความดัน, อุณหภูมิ, สภาพอากาศ และแก้ส</p><p class="text-3xl mt-3" style="margin-bottom:10px;">INPUT<img alt="" src="'+t+'" width="80px"></p><p style="margin-left:30px;"> รับข้อมูลจากสภาพแวดล้อมด้วย BME680 สำหรับนำอุณหภูมิ ความดันอากาศ และ แก๊สเพื่อนำไปพยากรอากาศ</p><p class="text-3xl mt-3" style="margin-bottom:10px;">FORECASTING <img alt="" src="'+t+'" width="80px"></p><img alt="" class="table-forecast" src="'+M+'"><p style="margin-left:30px;margin-top:10px;"> ใช้วัดระดับความสูงเหนือระดับน้ำทะเล อุณหภูมิ และ ความดันอากาศในการพยากรณ์อากาศ โดยใช้ Zembretti Algorithm ซึ่งมีความแม่นยำสูงภายในพื้นที่ท้องถิ่น โดยจะนำค่าต่างๆมาคำนวนหาหมายเลขตารางหมายเลขพยากรณ์ Z โดย <br>- หากความดันมีค่าตกหล่นจะใช้สมการ Z = 130 - (P0 / 81) <br>- หากความดันมีค่าเสถียรจะใช้สมการ Z = 130 - (P0 / 81) <br>- หากความดันมีค่าเพิ่มขึ้นจะใช้สมการ Z = 130 - (P0 / 81) <br>- โดยค่า P0 คือค่าความดันที่ระดับน้ำทะเล หาได้จากสมการ <img alt="" src="'+N+'" style="margin:10px;" width="400px"><br>P0 = ค่าความดันที่ระดับน้ำทะเล <br>P = ค่าความดันที่วัดได้ <br>h = ความสูงจากระดับน้ำทะเล <br>T = อุนหภูมิที่วัดได้ </p><p class="text-3xl mt-3" style="margin-bottom:10px;">CONNECTIVITY<img alt="" src="'+t+'" width="80px"></p><p class="ml-7"> เราทำการเชื่อมต่อเครื่องวัดสภาพอากาศเข้ากับ Webserver ที่สร้างไว้ด้วย WIFI และส่งข้อมูลเข้าไปแสดงหน้าเว็บ</p><p class="text-3xl mt-3 ml-2.5 mb-5" style="margin-bottom:10px;">OUTPUT<img src="'+t+'" width="80px"></p><p class="ml-7">  แสดงข้อมูลที่วัดไว้รวมถึงผลการพยากรณ์ในช่วงเวลาหนึ่งทั้งในปัจจุบันและประวัติการวัดที่ผ่านมาบนหน้าเว็บไซต์ และ ข้อมูลที่วัดได้แบบ Real Time รวมถึง Status ในหน้าจอ LCD บนตัวครื่อง</p></div>',6),D=e('<div class="flex flex-wrap"><img alt="" class="img pt-3" src="'+B+'" width="500"><img alt="" class="img pt-3" src="'+E+'" width="500"><img alt="" class="img pt-3" src="'+k+'" width="500"><img alt="" class="img pt-3" src="'+$+'" width="500"></div>',1),W=d({__name:"index",setup(c){return(o,n)=>{const i=L;return a(),r(g,null,[j,s("div",I,[Z,m(i),D])],64)}}});export{W as default};
